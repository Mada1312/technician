rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ Users
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;     
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // ✅ Technicians
    match /technicians/{technicianDocId} {
      allow read: if request.auth != null;

      // السماح بإنشاء الوثيقة لأول مرة
      allow create: if request.auth != null && request.auth.uid == technicianDocId;

      // السماح بالتعديل بنفس الشروط القديمة
      allow update: if request.auth != null && (
        request.auth.uid == technicianDocId ||
        request.auth.token.admin == true ||
        (
          request.resource.data.rating is number &&
          request.resource.data.ratingCount is number &&
          request.resource.data.diff(resource.data).changedKeys().hasOnly(['rating', 'ratingCount'])
        )
      );
    }

    // ✅ Technician Recharges
    match /technicians/{technicianId}/recharges/{rechargeId} {
      allow read, write: if request.auth != null && request.auth.uid == technicianId;
    }

    // ✅ Requests
    match /requests/{requestId} {
      allow create: if request.auth != null;

      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        resource.data.technician.id == request.auth.uid ||
        resource.data.technicianId == request.auth.uid ||
        resource.data.status == "searching"
      );

      allow update: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        request.resource.data.technician.id == request.auth.uid ||
        request.resource.data.technicianId == request.auth.uid
      );

      allow delete: if request.auth != null &&
        resource.data.userId == request.auth.uid;
    }

    // ✅ Issues by Service Type
    match /issues_by_service/{serviceType} {
      allow read: if request.auth != null;
    }

    // ✅ Pricing
    match /pricing/{pricingId} {
      allow create, read: if request.auth != null;
      allow update, delete: if request.auth != null;
    }

    // ✅ Completed Orders
    match /completedOrders/{docId} {
      allow create: if request.auth !=null && (
        request.resource.data.technicianId == request.auth.uid ||
        request.resource.data.technician.id == request.auth.uid
      );

      allow read: if request.auth != null && (
        resource.data.technicianId == request.auth.uid ||
        resource.data.technician.id == request.auth.uid
      );
    }

    // ✅ Orders
    match /orders/{orderId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == resource.data.technicianId ||
        request.auth.uid == resource.data.technician.id ||
        request.auth.uid == resource.data.userId
      );
    }

    // ✅ Ratings
    match /ratings/{ratingId} {
      allow create, read: if request.auth != null;
    }

    // ✅ Branches
    match /branches/{branchId} {
      allow read: if true;
    }

    // ✅ Services
    match /services/{serviceId} {
      allow read: if true;
    }

    // ✅ Rule خاصة للـ Admin (مفتوحة على الكل)
    match /{document=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
